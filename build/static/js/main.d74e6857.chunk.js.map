{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","params","put","Filter","newFilter","handleFilter","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","deletePerson","personShow","filter","person","name","toLowerCase","includes","map","number","onClick","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","console","log","personService","initialPersons","event","target","preventDefault","nameObject","length","setTimeout","previousPerson","find","changeNumber","updatePerson","catch","error","newPerson","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"yMACMA,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVM,SAAAG,GAEjB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,GAAM,CAACE,OAAQ,CAAEF,QAC7CL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCV9BO,EATA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzB,OACE,qDACoB,uBAAOC,MAAOF,EAChCG,SAAUF,QCgBHG,EApBI,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBAEjE,OACE,uBAAMC,SAAUL,EAAhB,UACI,yCACQ,uBAAOH,MAAOI,EACpBH,SAAUI,OAGZ,2CACU,uBAAOL,MAAOM,EACtBL,SAAUM,OAGZ,8BACE,wBAAQE,KAAK,SAAb,uBCDKC,EAfD,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASb,EAA8B,EAA9BA,UAAWc,EAAmB,EAAnBA,aAC7BC,EAAaF,EAAQG,QAC3B,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASpB,EAAUmB,kBAGrD,OACE,8BACGJ,EAAWM,KAAI,SAAAJ,GAAM,OACtB,+BACGA,EAAOC,KADV,IACiBD,EAAOK,OADxB,IACgC,wBAAQC,QAAS,kBAAMT,EAAaG,EAAOtB,KAA3C,sBADvBsB,EAAOtB,UCGX6B,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,QAAf,SACKD,KCkHEE,G,MAjHH,WACV,MAA+BC,mBAAS,IAAxC,mBAAQf,EAAR,KAAiBgB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQtB,EAAR,KAAiBwB,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQpB,EAAR,KAAmBuB,EAAnB,KACA,EAAoCH,mBAAS,IAA7C,mBAAQ5B,EAAR,KAAmBgC,EAAnB,KACA,EAA0CJ,mBAAS,MAAnD,mBAAQK,EAAR,KAAsBC,EAAtB,KAEAC,qBAAW,WACTC,QAAQC,IAAI,UACZC,IAEGhD,MAAK,SAAAiD,GACJV,EAAWU,QAEd,IA0EH,OACE,gCACE,2CACA,cAAC,EAAD,CAAcd,QAASQ,IACvB,cAAC,EAAD,CAAQ/B,MAAOF,EACbC,aATe,SAACuC,GACpBR,EAAaQ,EAAMC,OAAOvC,UAUxB,2CACA,cAAC,EAAD,CACEG,QAlFU,SAACmC,GACfA,EAAME,iBACN,IAAMC,EAAa,CACjBzB,KAAMZ,EACNgB,OAAQd,GAMV,GAHwBK,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOC,OAASZ,KAG7CsC,OAAS,EAAG,CAC9BV,EAAgB,GAAD,OAAI5B,EAAJ,2EAEfuC,YAAW,WACTX,EAAgB,QACf,KAEH,IAAMY,EAAiBjC,EAAQkC,MAAK,SAAA9B,GAAM,OAAIA,EAAOC,OAASZ,KAExD0C,EAAY,2BAAQF,GAAR,IAAwBxB,OAAQd,IAElD8B,EACUQ,EAAenD,GAAIqD,GACxB1D,MAAK,SAAA2D,GACJpB,EAAWhB,EAAQQ,KAAI,SAAAJ,GAAM,OAAIA,EAAOC,OAASZ,EAAUW,EAASgC,SAErEC,OAAM,SAAAC,GACLjB,EAAgB,GAAD,OACV5B,EADU,qCAGfuC,YAAW,WACTX,EAAgB,QACf,aAITI,EACUK,GACLrD,MAAK,SAAA8D,GACJvB,EAAWhB,EAAQwC,OAAOD,IAC1BtB,EAAWxB,GACXyB,EAAavB,MAEf0B,EAAgB,GAAD,OAAI5B,EAAJ,wCACfuC,YAAW,WACTX,EAAgB,QACf,MAqCLhC,MAAOI,EAAUE,EACjBD,iBArBmB,SAACiC,GACxBV,EAAWU,EAAMC,OAAOvC,QAqBpBO,mBAnBqB,SAAC+B,GAC1BT,EAAaS,EAAMC,OAAOvC,UAoBxB,yCACA,cAAC,EAAD,CACEW,QAASA,EACTb,UAAWA,EACXc,aAzCe,SAACnB,GACpB2C,EACgB3C,GACXL,MAAK,SAAAgE,GACJA,EAAgBzC,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOtB,KAAOA,KACvDkC,EAAWyB,MAEbpB,EAAgB,GAAD,OAAI5B,EAAJ,4CACfuC,YAAW,WACTX,EAAgB,QACf,aC/EXqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d74e6857.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = ()  => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, {params: { id }})\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll, create, deletePerson, update\r\n}","\r\nconst Filter = ({ newFilter, handleFilter }) => {\r\n    return (\r\n      <div>\r\n        Filter shown with <input value={newFilter}\r\n        onChange={handleFilter}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\nexport default Filter","\r\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n\r\n    return (\r\n      <form onSubmit={addName}>\r\n          <div>\r\n            Name: <input value={newName}\r\n            onChange={handleNameChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            Number: <input value={newNumber}\r\n            onChange={handleNumberChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonForm","const Persons = ({ persons, newFilter, deletePerson }) => {\r\n    const personShow = persons.filter(\r\n    person => person.name.toLowerCase().includes(newFilter.toLowerCase()\r\n      )\r\n    )\r\n      return (\r\n        <div>\r\n          {personShow.map(person =>\r\n          <li key={person.id}>\r\n            {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>Delete</button>\r\n          </li>\r\n          )}\r\n        </div>\r\n      )\r\n  }\r\n  export default Persons","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n        \r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect (() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const filteredPersons = persons.filter(person => person.name === newName)\n    //console.log(persons.filter(person => person.name === nameObject.name).length)\n    \n    if (filteredPersons.length > 0) {\n      setErrorMessage(`${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      \n      const previousPerson = persons.find(person => person.name === newName)\n      //console.log(persons.find(person => person.name === newName))\n      const changeNumber = { ...previousPerson, number: newNumber }\n      \n      personService\n        .update(previousPerson.id, changeNumber)\n          .then(updatePerson => {\n            setPersons(persons.map(person => person.name !== newName ? person : updatePerson))\n          })\n          .catch(error => {\n            setErrorMessage(\n              `${newName} was already deleted from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n    }\n    else {\n      personService\n        .create(nameObject)\n          .then(newPerson => {\n            setPersons(persons.concat(newPerson))\n            setNewName(newName)\n            setNewNumber(newNumber)\n          })\n          setErrorMessage(`${newName} is successfully added to phonebook`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n    }\n  }\n\n  const deletePerson = (id) => {\n    personService\n      .deletePerson(id)\n        .then(deletedPerson => {\n          deletedPerson = persons.filter(person => person.id !== id)\n          setPersons(deletedPerson)\n        })\n        setErrorMessage(`${newName} is successfully deleted from phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value) \n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter value={newFilter} \n        handleFilter={handleFilter}\n        />\n      <h3>Add a new</h3>\n      <PersonForm\n        addName={addName}\n        value={newName + newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        persons={persons}\n        newFilter={newFilter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}